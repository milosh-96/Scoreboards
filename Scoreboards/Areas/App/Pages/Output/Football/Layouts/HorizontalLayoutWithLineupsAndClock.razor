@using Microsoft.AspNetCore.SignalR.Client;
@using Scoreboards.Areas.App.Pages.Output.Football.Components
@using Scoreboards.Data.Football;
@using Scoreboards.Models.Football;
@{
    var layoutOptions = ViewModel.LayoutOptions;
    string middleColumnWidth = layoutOptions.ShowStats ? "col-md-5" : "col-md-4";
}
  
<div class="container scoreboard">
     @if(ActiveEvent != null)
                {
                    <EventOutput 
                        FullScreenMode="true"
                        ActiveEvent="ActiveEvent.Value"
                             HomeTeam="ViewModel.HomeTeam"
                             AwayTeam="ViewModel.AwayTeam"></EventOutput>
                }
    <div class="layout">
        <div class="row">
            <div class="col home-team">
                <ul class="list-group lineups">
                    @foreach (var item in ViewModel.HomeTeam.Players)
                    {
                        <li class="list-group-item text-end">
                            <span>
                                @item.LastName
                            </span>
                            <span>
                                @item.ShirtNumber
                            </span>
                         
                        </li>
                    }
                </ul>
            </div>
            <div class="col @middleColumnWidth info">
                <div class="score-screen mb-2">
                    <div class="row">
                        <div class="col-md-6">
                          
                            @if (ViewModel.LayoutOptions.ShowTeamNames || String.IsNullOrEmpty(ViewModel.HomeTeam.Logo))
                            {
                                <p>@ViewModel.HomeTeam.Name</p>
                            }
                           
                        </div>
                        
                        <div class="col-md-6">
                            
                            @if (ViewModel.LayoutOptions.ShowTeamNames || String.IsNullOrEmpty(ViewModel.AwayTeam.Logo))
                            {
                                <p>@ViewModel.AwayTeam.Name</p>
                            }
                        </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                            @if (ViewModel.LayoutOptions.ShowTeamLogos && !String.IsNullOrEmpty(ViewModel.HomeTeam.Logo))
                            {
                                <img src="@ViewModel.HomeTeam.Logo" class="img-fluid" />
                            }
                            </div>
                            <div class="col-4">
                                <div class="score">
                                    @ViewModel.HomeTeam.Score-@ViewModel.AwayTeam.Score

                                </div>
                            </div>
                            <div class="col-4">
                            @if (ViewModel.LayoutOptions.ShowTeamLogos && !String.IsNullOrEmpty(ViewModel.AwayTeam.Logo))
                            {
                                <img src="@ViewModel.AwayTeam.Logo" class="img-fluid" />
                            }
                            </div>
                        </div>
                    </div>
                   
                @if(ViewModel.LayoutOptions.ShowStats)
                {
                    <Scoreboards.Areas.App.Pages.Output.Football.Components.MatchStatsTable
                    HomeTeam="ViewModel.HomeTeam"
                    AwayTeam="ViewModel.AwayTeam"
                    ></Scoreboards.Areas.App.Pages.Output.Football.Components.MatchStatsTable>
                }
                @if(ViewModel.LayoutOptions.ShowClock)
                {
                    <div class="clock">
                        @ViewModel.GetClockString()
                    </div>
                }
            </div>
            <div class="col away-team">
                <ul class="list-group lineups">
                    @foreach (var item in ViewModel.AwayTeam.Players)
                    {
                        <li class="list-group-item">
                            <span>
                                @item.ShirtNumber
                            </span>
                            <span>
                                @item.LastName
                            </span>
                          
                        </li>
                    }
                </ul>
            </div>
        </div>
        
    </div>
</div>

@code {

    [Parameter]
    public FootballEventsEnum? ActiveEvent { get; set; }

    [Parameter]
    public FootballScoreboardViewModel ViewModel { get; set; } = new FootballScoreboardViewModel();
}

<style>
    body {
        background:@ViewModel.HomeTeam.AccentColorHex;
        font-size:24px;
        color:#fefefe;
    }
    .score-screen {
        background:linear-gradient(to top,rgba(0,0,0,0.8),rgba(0,0,0,0.0) 40%);
        width:100%;
        height:35vh;
        padding:10px;
        text-align:center;
        border-bottom:5px solid rgba(0,0,0,0.2);
    }
    .score-screen .score {
            font-size: 64px;
        }
    .lineups > li,.stats-table > tr {
        background:linear-gradient(to left,rgba(0,0,0,0.0),rgba(0,0,0,0.2) 15%,rgba(0,0,0,0.0) 85%);
        color:inherit;
        text-transform:uppercase;
    }
    .stats-table {
        background: linear-gradient(to top,rgba(0,0,0,0.8),rgba(0,0,0,0.0) 20%);
        border-bottom: 5px solid rgba(0,0,0,0.2);
        width:100%;
        min-height:35vh;
    }
    .stats-table > tr > td {color:#fff;text-align:center;font-size:18px;}
    .clock {
        background:rgba(255,255,255,0.2);
        box-shadow:5px 5px 1px rgba(255,255,255,0.2);
        font-size:48px;
        padding:10px;
        text-align:center;
        

    }
</style>