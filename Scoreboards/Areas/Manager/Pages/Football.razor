@page "/manager/football"
@using Models.Football;
<div>
    <h3>Football</h3>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col-6">
                    <input @bind="@ViewModel.HomeTeam.Name" />
                    <input type="number" min="0" max="15" @bind="@ViewModel.HomeTeam.Score" />
                </div>
                <div class="col-6">
                    <input @bind="@ViewModel.AwayTeam.Name" />
                    <input type="number" min="0" max="15" @bind="@ViewModel.AwayTeam.Score" />
                </div>
            </div>
        </div>
        <div class="col">

            <button @onclick="StartTimer" disabled="@(timer != null)">Start</button>
        </div>
    </div>
    <div id="preview">
        <hr />
        <h2>
            @ViewModel.GetClockString()
            |
            @ViewModel.HomeTeam.Name 
            @ViewModel.HomeTeam.Score:@ViewModel.AwayTeam.Score
            @ViewModel.AwayTeam.Name

        </h2>
    </div>
</div>


@code {
    public FootballScoreboardViewModel ViewModel { get; set; } = new FootballScoreboardViewModel();
    System.Threading.Timer? timer;

    private void SetClock(object stateInfo)
    {
        ViewModel.Clock = ViewModel.Clock + 1;
        InvokeAsync(StateHasChanged); // MUST CALL StateHasChanged() BECAUSE THIS IS TRIGGERED BY A TIMER INSTEAD OF A USER EVENT
    }
    public async Task StartTimer(MouseEventArgs e)
    {
        if(timer == null) {
        timer = new System.Threading.Timer(SetClock, new System.Threading.AutoResetEvent(false), 10, 1000); // 10 milliseconds
        }
        }

}
