@using Scoreboards.Data;
@using Scoreboards.Features.Football.Manager
@using Scoreboards.Data.Football;

<div>

    <div class="row">
        <div class="col">
            <div class="form-group">
                <label>Subbed Out Player</label>
                <select class="form-control" @bind="SubbedOutPlayerIndex">
                    @foreach (var item in Team.Players)
                    {
                        <option value="@Team.Players.IndexOf(item)">@item.ToString()</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Subbed In Player</label>
                <div class="d-flex">
                    <input class="form-control" type="text" @bind="NewPlayer.ShirtNumber" />
                    <input class="form-control" type="text" @bind="NewPlayer.FirstName" />
                    <input class="form-control" type="text" @bind="NewPlayer.LastName" />
                    <select class="form-control" @bind="@NewPlayer.Position">
                        <option value="Gk">Goalkeeper</option>
                        <option value="Df">Defender</option>
                        <option value="Mf">Middlefielder</option>
                        <option value="St">Striker</option>
                    </select>
                </div>
                
            </div>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="ConfirmSubstitution">Confirm</button>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public FootballEventsEnum Mode { get; set; } = FootballEventsEnum.None;
    [Parameter]
    public FootballEventBus EventBus { get; set; } = new FootballEventBus();

    [Parameter]
    public FootballTeam Team { get; set; } = new FootballTeam();

    public FootballPlayer NewPlayer { get; set; } = new FootballPlayer() { ShirtNumber=33, FirstName = "Jack",LastName="Smith",Position="Mf" };

    public int SubbedOutPlayerIndex { get; set; } = 0;
    public FootballPlayer SubbedOutPlayer { get; set; } = new FootballPlayer();
    public string SubbedInPlayer { get; set; } = "";

    public void ConfirmSubstitution()
    {
        SubbedOutPlayer = Team.Players[SubbedOutPlayerIndex];
        EventBus.Data = new List<KeyValuePair<FootballEventsDataKeysEnum, string>>()
        {
            new KeyValuePair<FootballEventsDataKeysEnum, string>(FootballEventsDataKeysEnum.Substitution_SubbedOutPlayer,SubbedOutPlayer.ToString()),
            new KeyValuePair<FootballEventsDataKeysEnum, string>(FootballEventsDataKeysEnum.Substitution_SubbedInPlayer,NewPlayer.ToString()),
        };
        EventBus.EventType = Mode;
        EventBus.Activate(TimeSpan.FromSeconds(30));

        Team.Players[SubbedOutPlayerIndex] = NewPlayer;
        this.StateHasChanged();
        this.SubbedOutPlayerIndex = 0;
        this.SubbedOutPlayer = Team.Players[0];
        this.SubbedInPlayer = "";
    }
}